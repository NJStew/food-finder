{"version":3,"sources":["functions/mainFunctions.js","images/finderbtn.png","images/backbtn.png","App.js","serviceWorker.js","index.js"],"names":["userLocation","userRadius","userPrice","exports","flip","document","getElementsByClassName","id","getElementById","setChoice","selected","parentElement","className","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getRest","innerHTML","placesRequest","XMLHttpRequest","url","onreadystatechange","this","readyState","status","responseArray","JSON","parse","responseText","setRest","results","Math","floor","random","length","open","send","result","name","rating","formatted_address","addressLink","formatLink","href","price_level","restPrice","i","concat","address","formattedString","restTitle","split","replace","charAt","module","App","onLoad","onClick","e","target","src","finderbtn","alt","backbtn","Boolean","window","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bcbc131.chunk.js","sourcesContent":["var userLocation; //Variable to hold the users latitude and longitude.\r\nvar userRadius; //Variable to hold the radius user would like to find food in.\r\nvar userPrice; //Variable to hold the desired price of food user would like to spend.\r\n\r\n/**\r\n * Function for flipping card.\r\n */\r\nexports.flip = () => { \r\n  if (document.getElementsByClassName('card-inner')[0].id ==='display-front') {\r\n    document.getElementById('display-front').id = 'display-back';\r\n  }\r\n  else {\r\n    document.getElementById('display-back').id = 'display-front';\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the price and radius based on user input.\r\n * \r\n * @param selected - element clicked on by user\r\n */\r\nexports.setChoice = (selected) => {\r\n  selected = selected.parentElement;\r\n  //Sets price\r\n  if (selected.id === 'price-one') {\r\n    userPrice = '1';\r\n    selected.className = 'choice-box box-one choice-selected';\r\n    document.getElementById('price-two').className = 'choice-box box-two price-two';\r\n    document.getElementById('price-three').className = 'choice-box box-three price-three';\r\n  }\r\n  else if (selected.id === 'price-two') {\r\n    userPrice = '2';\r\n    selected.className = 'choice-box box-two choice-selected';\r\n    document.getElementById('price-one').className = 'choice-box box-one price-one';\r\n    document.getElementById('price-three').className = 'choice-box box-three price-three';\r\n  }\r\n  else if (selected.id === 'price-three') {\r\n    userPrice = '3';\r\n    selected.className = 'choice-box box-three choice-selected';\r\n    document.getElementById('price-one').className = 'choice-box box-one price-one';\r\n    document.getElementById('price-two').className = 'choice-box box-two price-two';\r\n  }\r\n  //Sets distance\r\n  if (selected.id === 'distance-one') {\r\n    userRadius = 1610;\r\n    selected.className = 'choice-box box-one choice-selected';\r\n    document.getElementById('distance-two').className = 'choice-box box-two distance-two';\r\n    document.getElementById('distance-three').className = 'choice-box box-three distance-three';\r\n  }\r\n  else if (selected.id === 'distance-two') {\r\n    userRadius = 16100;\r\n    selected.className = 'choice-box box-two choice-selected';\r\n    document.getElementById('distance-one').className = 'choice-box box-one distance-one';\r\n    document.getElementById('distance-three').className = 'choice-box box-three distance-three';\r\n  }\r\n  else if (selected.id === 'distance-three') {\r\n    userRadius = 48300;\r\n    selected.className = 'choice-box box-three choice-selected';\r\n    document.getElementById('distance-one').className = 'choice-box box-one distance-one';\r\n    document.getElementById('distance-two').className = 'choice-box box-two distance-two';\r\n  }\r\n};\r\n\r\n/**\r\n * Gets user latitude and longitude and updates userLocation with a string representation of the information.\r\n */\r\nexports.getLocation = () => {\r\n  navigator.geolocation.getCurrentPosition(function(position) {\r\n    userLocation = `${position.coords.latitude}, ${position.coords.longitude}`;\r\n  });\r\n};\r\n\r\n/**\r\n * Gets a list of restaurants from Google Places API based on user input, then calls the helper method setRest() \r\n * to display a randomly chosen restaurant from the returned array.\r\n */\r\nexports.getRest = () => {\r\n  //Checks that user has selected both options. If not, displays error message to card.\r\n  if (typeof userPrice === 'undefined' || typeof userRadius === 'undefined') {\r\n    document.getElementById('error').innerHTML = 'Please choose distance and price.';\r\n    return;\r\n  }\r\n  document.getElementById('error').innerHTML = '';\r\n  document.getElementById('find-btn-img').className = 'find-btn-img spin';\r\n  let placesRequest = new XMLHttpRequest();\r\n  let url = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurant&type=restaurant&location=${userLocation}&radius=${userRadius}&maxprice=${userPrice}&minprice=${userPrice}&key=AIzaSyCEkzOHscV5INaf0QwFzdwNv6sJKOTPjBA`;\r\n  placesRequest.onreadystatechange = function() {\r\n    if (this.readyState === 4 && this.status === 200) {\r\n      let responseArray = JSON.parse(this.responseText);\r\n      setRest(responseArray.results[Math.floor(Math.random() * (responseArray.results.length - 1))]);\r\n    }\r\n  };\r\n  placesRequest.open('GET', url, true);\r\n  placesRequest.send();\r\n};\r\n\r\n/**\r\n * Sets and displays a randomly chosen restaurant to the back of card.\r\n * \r\n * @param {object} result - Randomly chosen restaurant\r\n */\r\nconst setRest = (result) => {\r\n  document.getElementById('title').innerHTML = result.name;\r\n  document.getElementById('rating').innerHTML = 'Rating: ' + result.rating;\r\n  document.getElementById('address-link').innerHTML = result.formatted_address;\r\n  //Calls formatLink to get a Google Maps link to restaurant\r\n  let addressLink = formatLink(result);\r\n  document.getElementById('address-link').href = `https://www.google.com/maps/search/?api=1&query=${addressLink}`;\r\n  //Displays price of restaurant if price in unavailable.\r\n  if (!result.price_level >= 1) {\r\n    document.getElementById('price').innerHTML = 'Price: $';\r\n  }\r\n  //Displays price of restaurant as dollar signs.\r\n  else {\r\n    let restPrice = '';\r\n    for (let i = 0; i < result.price_level; i++) {\r\n      restPrice = restPrice.concat('$');\r\n    }\r\n    document.getElementById('price').innerHTML = 'Price: ' + restPrice;\r\n  }\r\n  document.getElementById('display-front').id = 'display-back';\r\n  document.getElementById('find-btn-img').className = 'find-btn-img';\r\n};\r\n\r\n/**\r\n * Formats address information, so it can be used to create a Google Maps link to restaurant.\r\n * \r\n * @param {object} address - Randomly chosen restaurant\r\n * @returns formattedString - Formatted restaurant address.\r\n */\r\nconst formatLink = (address) => {\r\n  let formattedString = \"\";\r\n  let restTitle = address.name;\r\n  address = address.formatted_address.split(\",\");\r\n  restTitle = restTitle.replace(/ /g, \"+\");\r\n  //Formats the title of the restaurant.\r\n  for (let i = 0; i < address.length; i++) {\r\n    if (address[i].charAt(0) === \" \") {\r\n      address[i] = address[i].replace(\" \", \"\");\r\n    }\r\n    address[i] = address[i].replace(/ /g, \"+\");\r\n  }\r\n  //Appends restTitle to formattedString along with the rest of the address information.\r\n  for (let i = 0; i < address.length; i++) {\r\n    if (i === 0) {\r\n      formattedString = restTitle + \"%2c\" + address[i] + \"%2c\";\r\n    }\r\n    else if (i === address.length - 1) {\r\n      formattedString = formattedString.concat(address[i]);\r\n    }\r\n    else {\r\n      formattedString = formattedString.concat(address[i].concat(\"%2c\"));\r\n    }\r\n  }\r\n  return formattedString;\r\n}","module.exports = __webpack_public_path__ + \"static/media/finderbtn.5bd703a4.png\";","module.exports = __webpack_public_path__ + \"static/media/backbtn.bda26c6e.png\";","import React from 'react';\nimport './App.css';\n\nimport finderbtn from './images/finderbtn.png';\nimport backbtn from './images/backbtn.png';\n\nimport {flip, setChoice, getLocation, getRest} from './functions/mainFunctions.js';\n\nfunction App() {\n  return (\n    <div className=\"app\" onLoad={getLocation}>\n      <div className=\"side-banner\">\n        <h4 className=\"side-banner-h4\">Welcome to Food Finder!</h4>\n        <p className=\"side-banner-p\">Click on one of the prices to set your max price, and click one of the distance options to set your max distance.</p>\n        <p className=\"side-banner-p\">Enjoy your food!</p>\n      </div>\n      <div className=\"card\">\n        <div id=\"display-front\" className=\"card-inner\">\n          <div className=\"card-front\">\n            <h6 className=\"choices-title\">Price</h6>\n            <div className=\"choices-container\">\n              <div id=\"price-one\" className=\"choice-box box-one price-one\" onClick={(e) => setChoice(e.target)}><h6 className=\"choice-text\">$</h6></div>\n              <div id=\"price-two\" className=\"choice-box box-two price-two\"><h6 className=\"choice-text\" onClick={(e) => setChoice(e.target)}>$$</h6></div>\n              <div id=\"price-three\" className=\"choice-box box-three price-three\"><h6 className=\"choice-text\" onClick={(e) => setChoice(e.target)}>$$$</h6></div>\n            </div>\n            <h6 className=\"choices-title\">Distance (Mi.)</h6>\n            <div className=\"choices-container\">\n              <div id=\"distance-one\" className=\"choice-box box-one distance-one\"><h6 className=\"choice-text\" onClick={(e) => setChoice(e.target)}>1</h6></div>\n              <div id=\"distance-two\" className=\"choice-box box-two distance-two\"><h6 className=\"choice-text\" onClick={(e) => setChoice(e.target)}>10</h6></div>\n              <div id=\"distance-three\" className=\"choice-box box-three distance-three\"><h6 className=\"choice-text\" onClick={(e) => setChoice(e.target)}>30</h6></div>\n            </div>\n            <button className=\"find-btn\" onClick={getRest}><img id=\"find-btn-img\" className=\"find-btn-img\" src={finderbtn} alt=\"Find Restaurant\"></img></button>\n            <p id=\"error\"></p>\n          </div>\n          <div className=\"card-back\">\n            <h5 className=\"card-back-h5\" id=\"title\">Title</h5>\n            <ul>\n              <li><h6 className=\"card-back-h6\" id=\"rating\">Rating: </h6></li>\n              <li><h6 className=\"card-back-h6\" id=\"price\">Price: </h6></li>\n              <li><h6 className=\"card-back-h6\" id=\"address\">Address: <a id=\"address-link\" className=\"card-back-a\" href=\"https://www.google.com/maps\" target=\"_blank\">Link</a></h6></li>\n            </ul>\n            <button className=\"back-btn\" onClick={flip}><img className=\"back-btn-img\" src={backbtn} alt=\"Back Button\"></img></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}